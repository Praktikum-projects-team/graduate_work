version: "3.5"

services:
  auth_postgres:
    container_name: auth_postgres
    image: "postgres:13"
    env_file:
      - ../envs/auth/.env
    volumes:
      - $HOME/postgresql/auth_data:/var/lib/postgresql/auth_api_data
    restart: always
    ports:
      - "5432:5432"

  auth_redis:
    container_name: auth_redis
    image: redis:7
    env_file:
      - ../envs/auth/.env
    volumes:
      - $HOME/redis/data:/var/lib/redis/data

  auth:
    container_name: auth
    image: ghcr.io/praktikum-projects-team/auth_api:0.1.3
    env_file:
      - ../envs/auth/.env
    depends_on:
      - auth_redis
      - auth_postgres
    ports:
      - "8000:8000"

  mongodb:
    container_name: mongodb
    image: mongo:4.4.6
    volumes:
      - mo_data:/mo_data

  feedback:
    container_name: feedback
    image: ghcr.io/praktikum-projects-team/changable_ugc:latest
    env_file:
      - ../envs/ugc/.env
    ports:
      - "8001:8001"

  cinema_mongodb:
    container_name: cinema_mongodb
    image: mongo:4.4.6
    env_file:
      - ../envs/cinema_together/.env
    ports:
      - "27018:27017"
    volumes:
      - mo_data:/mo_data

  cinema_together:
    container_name: cinema_together
    build: ..
    env_file:
      - .env
    ports:
      - "8003:8001"
    depends_on:
      - cinema_mongodb

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - cinema_together
    ports:
      - "80:80"

  friends_postgres:
    container_name: friends_postgres
    image: "postgres:13"
    env_file:
      - ../envs/friends/.env
    volumes:
      - $HOME/postgresql/friends_data:/var/lib/postgresql/friends_api_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d friends_db" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
    ports:
      - "5433:5432"

  friends:
    container_name: friends
    image: ghcr.io/praktikum-projects-team/friends_service:0.1.1
    env_file:
      - ../envs/friends/.env
    depends_on:
      - friends_postgres
    ports:
      - "8002:8001"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    env_file:
      - ../envs/notification/.env
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"

  notification_postgres:
    container_name: notification_postgres
    image: "postgres:13"
    env_file:
      - ../envs/notification/.env
    volumes:
      - $HOME/postgresql/notification_data:/var/lib/postgresql/notification_api_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d notification_db" ]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
    ports:
      - "5434:5432"

  notification:
    container_name: notification
    image: ghcr.io/praktikum-projects-team/notification_service:0.1.3
    env_file:
      - ../envs/notification/.env
    depends_on:
      - notification_worker
    ports:
      - "8004:8001"

  notification_worker:
    container_name: notification_worker
    image: ghcr.io/praktikum-projects-team/notification_service:0.1.3
    command: python3 notification_worker.py
    env_file:
      - ../envs/notification/.env
    depends_on:
      notification_postgres:
        condition: service_healthy

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    logging:
      driver: 'none'
    expose:
      - 1025
    ports:
      - "8025:8025"

  tests:
    container_name: tests
    build: .
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: 1
    depends_on:
      - auth
      - cinema_together
      - friends
      - notification
      - notification_worker

volumes:
  mo_data:
